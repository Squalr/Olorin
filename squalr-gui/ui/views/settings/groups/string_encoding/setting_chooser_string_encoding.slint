import { Theme } from "../../../../theme.slint";

import { ConversionsViewModelBindings, ScanSettingsViewModelBindings, StringEncodingView } from "../../../../view_model_bindings.slint";
import { IconConverter } from "../../../../converters/icon_converter.slint";
import { Button } from "../../../../components/buttons/button.slint";
import { ContextMenu } from "../../../../components/context_menu/context_menu.slint";
import { SettingChooserStringEncodingEntry } from "setting_chooser_string_encoding_entry.slint";

export component SettingChooserStringEncoding inherits Rectangle {
    icon_converter := IconConverter { }

    HorizontalLayout {
        padding: 0px;
        spacing: 0px;
        string_encoding_dropdown_button := Button {
            height: 24px;
            clicked => {
                string_encoding_context_menu.show();
            }
            Rectangle {
                background: Theme.background_control;
                border_color: Theme.submenu_border;
                border_width: 1px;
                border_radius: 1px;
                VerticalLayout {
                    alignment: center;
                    HorizontalLayout {
                        padding_left: 4px;
                        padding_right: 8px;
                        alignment: start;
                        spacing: 8px;
                        Text {
                            color: Theme.foreground;
                            horizontal_alignment: left;
                            vertical_alignment: center;
                            text: ConversionsViewModelBindings.get_string_encoding_string(ScanSettingsViewModelBindings.string_encoding);
                        }
                    }
                }
            }

            HorizontalLayout {
                alignment: end;
                padding_right: 4px;
                Image {
                    source: @image_url("../../../../images/navigation/down_arrow_small.png");
                }
            }

            HorizontalLayout {
                alignment: end;
                padding_right: 24px;
                Rectangle {
                    background: Theme.submenu_border;
                    width: 1px;
                }
            }
        }
    }

    string_encoding_context_menu := ContextMenu {
        close_policy: close_on_click_outside;
        x: string_encoding_dropdown_button.x;
        y: string_encoding_dropdown_button.y + string_encoding_dropdown_button.height;
        Rectangle {
            background: Theme.background_control;
            border_color: Theme.submenu_border;
            border_width: 1px;
            min_width: string_encoding_dropdown_button.width - self.border_width * 2 + 8px;
            VerticalLayout {
                padding: 0px;
                spacing: 0px;
                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.utf8;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.utf16;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.utf16be;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.ascii;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.big5;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.euc_jp;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.euc_kr;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.gb18030_2022;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.gbk;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.hz;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso2022_jp;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_1;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_10;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_13;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_14;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_15;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_16;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_2;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_3;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_4;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_5;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_6;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_7;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_8;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.iso8859_8i;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.koi8_r;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.koi8_u;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.macintosh;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.mac_cyrillic;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.replacement;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.shift_jis;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.windows_1250;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.windows_1251;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.windows_1252;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.windows_1253;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.windows_1254;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.windows_1255;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.windows_1256;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.windows_1257;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.windows_1258;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.windows_874;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.x_mac_cyrillic;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }

                SettingChooserStringEncodingEntry {
                    string_encoding: StringEncodingView.x_user_defined;
                    onClicked => {
                        string_encoding_context_menu.close();
                    }
                }
            }
        }
    }
}
